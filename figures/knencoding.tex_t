% vim:ft=tex
%
% NOTE: The roles of the indices i and j are reversed here compared to the text.
% I.e., here j is the source index and i denotes the quantization level.
%
\begin{tikzpicture}[every node/.style=smallfont]
  % Horizontal position of ``channel''
  \coordinate (chx) at (8.6,0);
  

  \def\Elabelarray{{"3","4","5"}}
  \foreach \i in {0,1} {

    % Set up two counters. They will hold \i+1 and \j+1, which are used in
    % labels.
    \newcount\indi
    \newcount\indj

    % Compute i+1
    \pgfmathsetcount{\indi}{\i+1}

    % The ``anchor'' of this group. All elements will be specified relative to
    % this point.
    \coordinate (a\i) at ($ \i*(0,-6.5) $);

    % The following coordinates denote the horizontal and vertial distance
    % between elements (quantizers, ...) in the same group.
    \coordinate (dh) at (-.8,0);
    \coordinate (dv) at (0,-.8);

    \path (a\i) ++(dv)  +(5.75,0) node[rectangle,draw,
    minimum height=2.4cm,minimum width=1.8cm]
    (combiner\i) {combine};

    % A scaler to the right of the combiner.
    \path (combiner\i) +(2.25,0) node[trir] (scca\i) {};

    % Connections from the combiners to the scalers and then to the channel.
    \draw[l] (combiner\i) -- node[above] {$Q_{\tot,\the\indi}$} (scca\i);
    \draw[l] (scca\i) -- (scca\i -| chx) node[right] {$X_{\the\indi}$};

    \foreach \j in {0,1,2} {
      \begin{scope}[\if0\j ultra thick\fi]

      % Compute j + 1.
      \pgfmathsetcount{\indj}{\j+1}

      \coordinate (b\i\j) at ($ (a\i) + \j*(dh) + \j*(dv) $);
      \fill (b\i\j) circle (2pt);


      % Add the quantizers and the adder nodes and scalers below them.
      \path (b\i\j)
      +(3,0)
      node[sq] (quant\i\j) {Quantizer}
      +(0,-3)
      node[smallplus] (plus1\i\j) {$+$}
      +(0,-5.25)
      node[trid] (sc\i\j) {}
      node {$\beta$}
      +(0,-5.5)
      node[below right] {$E_{\the\indj,\the\indi}$};


      % Draw all connections.
        \draw[l] (b\i\j) -- (quant\i\j);
        \draw[l] (b\i\j) -- (plus1\i\j);
        \draw[l] (plus1\i\j) -- (sc\i\j);
        \draw[l] ($ (quant\i\j) + (1,0) $) |- node[above,pos=0.95] {$-$}
        (plus1\i\j);

      % Horizontal connections from the quantizers to the combiner.
      % Note the trick using -| to create a horizontal line to the node.
      \draw[l] (quant\i\j) -- (quant\i\j.east -| combiner\i.west)
      node[above left] {$Q_{\the\indj,\the\indi}$};

      \end{scope}
    }
  }

  % This adds the ``uncoded'' transmission branches of the three remaining
  % quantization errors.
  \foreach \j in {0,1,2}
  {
    % A scope in which everything is drawn thick if j = 0.
    \begin{scope}[\if0\j ultra thick\fi]

    % Add the source nodes and the connections.
    \pgfmathsetcount{\indj}{\j+1}
    \node (S\j) at ($ (b00) + 3*(dh) + \j*(dv) + (.25,0) $) {$S_{\the\indj}$};
    \draw[l] (S\j) -- (b0\j);

    \path (sc1\j)
    +(0,-.8)
    node[coordinate] (p\j) {};

    \coordinate (p2\j) at ($ (p0) + \j*(dv) + (2,0) $);

    \node[trir] (scc\j) at (p2\j) {};

    % Connections between the scalers of the top group with the adders of the
    % bottom group.
    \draw (sc0\j) -- (b1\j);

    % Connections from the beta scalers of the bottom group to the ``encoder''
    % scalers.
    \draw[l] (sc1\j) -- (p\j) -- (scc\j);

    % Connections to channel
    \draw[l] (scc\j) -- (scc\j -| chx) node[right] {$X_{
    \pgfmathparse{\Elabelarray[\j]}\pgfmathresult}$};

    \end{scope}  % scope for drawing thick lines when j = 0
  }

  %\draw[step=1mm,help lines] (quant00) grid +(5,-3);
\end{tikzpicture}
